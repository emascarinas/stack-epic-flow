var mockedData = function() {
    angular.module('mockedData', [])
            .value('getProfile', {"items": [{"badge_counts": {"bronze": 0, "silver": 0, "gold": 0}, "account_id": 5169139, "is_employee": false, "last_access_date": 1428792043, "reputation_change_year": 0, "reputation_change_quarter": 0, "reputation_change_month": 0, "reputation_change_week": 0, "reputation_change_day": 0, "reputation": 1, "creation_date": 1413216767, "user_type": "registered", "user_id": 4138254, "link": "http://stackoverflow.com/users/4138254/em-as", "display_name": "Em as", "profile_image": "https://lh3.googleusercontent.com/-RdJHuQ-r5fg/AAAAAAAAAAI/AAAAAAAAMkY/0k17veAHPY8/photo.jpg?sz=128"}], "has_more": false, "quota_max": 10000, "quota_remaining": 9997, "total": 1})
            .value('error', {"error_id":502,"error_message":"error here","error_name":"throttle_violation"})
            .value('question', {"items":[{"tags":["angularjs","angularjs-directive"],"owner":{"reputation":563,"user_id":2848676,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/baa9a536bd433c981046a81f3cc5ca4d?s=128&d=identicon&r=PG&f=1","display_name":"Michael Osofsky","link":"http://stackoverflow.com/users/2848676/michael-osofsky"},"is_answered":false,"view_count":4,"answer_count":0,"score":0,"last_activity_date":1429050246,"creation_date":1429050246,"question_id":29638426,"link":"http://stackoverflow.com/questions/29638426/how-to-expose-behavior-from-element-directive","title":"How to expose behavior from Element directive?","body":"<p>I ran into a problem adapting the solution from <a href=\"http://stackoverflow.com/questions/15934500/how-to-expose-behavior-from-directive-with-isolated-scope\">How to expose behavior from directive with isolated scope?</a>.  I wanted to expose my directive as an Element rather than as an Attribute:</p>\n\n<p>Here's a <a href=\"http://jsfiddle.net/mqrrpega/\" rel=\"nofollow\">JSFiddle</a>.  When you click the first button, which uses the Attribute approach, everything is ok.  But the second button uses the Element approach and it gives an error.</p>\n\n<p>Here is the code as well:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div ng-app=\"main\"&gt;\n    &lt;div ng-controller=\"MyCtrl\"&gt;Click the first button and everything is ok:\n        &lt;br&gt;\n        &lt;button ng-click=\"callFnInAttribute()\"&gt;Call Function in Attribute Directive&lt;/button&gt;\n        &lt;br&gt;{{errorViaAttribute}}\n        &lt;div my-attribute my-fn-via-attribute=\"fnInCtrlViaAttribute\"&gt;&lt;/div&gt;\n        &lt;br&gt;\n        &lt;br&gt;But click the second button and you get an error:\n        &lt;br&gt;\n        &lt;button ng-click=\"callFnInElement()\"&gt;Call Function in Element Directive&lt;/button&gt;\n        &lt;br&gt;{{errorViaElement}}\n        &lt;my-element my-fn-via-element=\"fnInCtrlViaElement\"&gt;&lt;/my-element&gt;\n        &lt;br&gt;\n        &lt;br&gt;The only difference is the type of directive used. Why does it work with an Attribute type of directive but not with an Element directive?&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>angular.module(\"main\", []).controller(\"MyCtrl\", function ($scope) {\n    $scope.callFnInAttribute = function () {\n        try {\n            $scope.fnInCtrlViaAttribute();\n            $scope.errorViaAttribute = \"OK\";\n        } catch (anError) {\n            $scope.errorViaAttribute = \"Error: \" + anError;\n        }\n    };\n\n    $scope.callFnInElement = function () {\n        try {\n            $scope.fnInCtrlViaElement();\n            $scope.errorViaElement = \"OK\";\n        } catch (anError) {\n            $scope.errorViaElement = \"Error: \" + anError;\n        }\n    };\n}).directive(\"myAttribute\", function () {\n    return {\n        require: 'A',\n        scope: {\n            myFnViaAttribute: '='\n        },\n        controllerAs: 'chartCtrl',\n        bindToController: true,\n        controller: function ($scope) {\n            $scope.myFnViaAttribute = function () {\n                console.log(\"myFnViaAttribute called\");\n            }\n        }\n    };\n}).directive(\"myElement\", function () {\n    return {\n        require: 'E',\n        scope: {\n            myFnViaElement: '='\n        },\n        controllerAs: 'chartCtrl',\n        bindToController: true,\n        controller: function ($scope) {\n            $scope.myFnViaElement = function () {\n                console.log(\"myFnViaElement called\");\n            }\n        }\n    };\n});\n</code></pre>\n\n<p>This is using the following AngularJS version: <a href=\"https://code.angularjs.org/1.1.0/angular.min.js\" rel=\"nofollow\">https://code.angularjs.org/1.1.0/angular.min.js</a></p>\n\n<p>How do I correctly expose the behavior from an Element?</p>\n"}],"has_more":false,"quota_max":10000,"quota_remaining":9966})
            .value('answer', {"items":[{"owner":{"reputation":4651,"user_id":1501926,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/4bf63da3cad700bd1a604e96b166866e?s=128&d=identicon&r=PG","display_name":"floribon","link":"http://stackoverflow.com/users/1501926/floribon"},"is_accepted":false,"score":0,"last_activity_date":1429050729,"creation_date":1429050729,"answer_id":29638518,"question_id":29638426,"body":"<p>I think your error simply comes from the fact that you wrote <code>require</code> instead of <code>restrict</code> in your directives. <code>require</code> is to make sure another directive is present in the same element, <code>restrict</code> is to define the HTML structure of your directive.</p>\n\n<pre><code>.directive(\"myAttribute\", function () {\n  return {\n    restrict: 'A', // &lt;-- and not \"require\"\n    scope: {\n      myFnViaAttribute: '='\n    },\n    controllerAs: 'chartCtrl',\n    bindToController: true,\n    controller: function ($scope) {\n      $scope.myFnViaAttribute = function () {\n        console.log(\"myFnViaAttribute called\");\n      }\n    }\n  };\n})\n</code></pre>\n"}],"has_more":false,"quota_max":300,"quota_remaining":265,"total":1})
            .value('qcomments', {"items":[],"has_more":false,"quota_max":300,"quota_remaining":263,"total":0})
            .value('acomments', {"items":[],"has_more":false,"quota_max":300,"quota_remaining":262,"total":0})
            ;
};
module.exports = mockedData;